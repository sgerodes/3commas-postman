{
	"info": {
		"_postman_id": "2ad0c02c-166b-49f7-a749-89d69107b9ba",
		"name": "3commas from swagger",
		"description": "# Introduction\nWhat does your API do?\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests an user can send?",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ver1",
			"item": [
				{
					"name": "bots",
					"item": [
						{
							"name": "{bot id}",
							"item": [
								{
									"name": "post Ver1Bots Bot Id Copy And Create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "secret",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "amount",
													"value": "<double>",
													"description": "Max amount for bot usage (Based on current rate)"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/copy_and_create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"copy_and_create"
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "POST /bots/:id/copy_and_create. Permission: BOTS_WRITE, Security: SIGNED"
									},
									"response": [
										{
											"name": "POST /bots/:id/copy_and_create. Permission: BOTS_WRITE, Security: SIGNED",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "secret",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "amount",
															"value": "<double>",
															"description": "Max amount for bot usage (Based on current rate)"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/copy_and_create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"copy_and_create"
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "patch Ver1Bots Bot Id Update",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "pairs",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "pairs",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "base_order_volume",
													"value": "<double>",
													"description": "(Required) Base order size"
												},
												{
													"key": "take_profit",
													"value": "<double>",
													"description": "(Required) Target profit(percentage)"
												},
												{
													"key": "safety_order_volume",
													"value": "<double>",
													"description": "(Required) Safety trade size"
												},
												{
													"key": "martingale_volume_coefficient",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "martingale_step_coefficient",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "max_safety_orders",
													"value": "<integer>",
													"description": "(Required) Max safety trades count"
												},
												{
													"key": "active_safety_orders_count",
													"value": "<integer>",
													"description": "(Required) Max active safety trades count"
												},
												{
													"key": "safety_order_step_percentage",
													"value": "<double>",
													"description": "(Required) Price deviation to open safety trades(percentage)"
												},
												{
													"key": "take_profit_type",
													"value": "total",
													"description": "(Required) Percentage: base – from base order, total – from total volume"
												},
												{
													"key": "strategy_list",
													"value": "<json>",
													"description": "(Required) For manual signals: [{\"strategy\":\"manual\"}] or []<br>\n                                                        For non-stop(1 pair only): [{\"strategy\":\"nonstop\"}]<br>\n                                                        QFL: {\"options\": {\"type\": \"original\"}, {\"percent\": 3}, \"strategy\": \"qfl\"}] <br>\n                                                        TradingView: [{\"options\": {\"time\": \"5m\", \"type\": \"buy_or_strong_buy\", \"strategy\": \"trading_view\"} "
												},
												{
													"key": "strategy_list",
													"value": "<json>",
													"description": "(Required) For manual signals: [{\"strategy\":\"manual\"}] or []<br>\n                                                        For non-stop(1 pair only): [{\"strategy\":\"nonstop\"}]<br>\n                                                        QFL: {\"options\": {\"type\": \"original\"}, {\"percent\": 3}, \"strategy\": \"qfl\"}] <br>\n                                                        TradingView: [{\"options\": {\"time\": \"5m\", \"type\": \"buy_or_strong_buy\", \"strategy\": \"trading_view\"} "
												},
												{
													"key": "max_active_deals",
													"value": "1"
												},
												{
													"key": "base_order_volume_type",
													"value": "<string>",
													"description": "base order volume currency"
												},
												{
													"key": "safety_order_volume_type",
													"value": "<string>",
													"description": "safety order volume currency"
												},
												{
													"key": "stop_loss_percentage",
													"value": "<double>"
												},
												{
													"key": "cooldown",
													"value": "<double>"
												},
												{
													"key": "trailing_enabled",
													"value": "<boolean>",
													"description": "Enable trailing take profit. Binance only."
												},
												{
													"key": "trailing_deviation",
													"value": "<double>",
													"description": "required if trailing_enabled"
												},
												{
													"key": "btc_price_limit",
													"value": "<double>"
												},
												{
													"key": "leverage_type",
													"value": "not_specified",
													"description": "Used for Bitmex bots only"
												},
												{
													"key": "leverage_custom_value",
													"value": "<double>",
													"description": "required if leverage_type is isolated"
												},
												{
													"key": "min_price",
													"value": "<double>",
													"description": "minimum price to open deal"
												},
												{
													"key": "max_price",
													"value": "<double>",
													"description": "maximum price to open deal"
												},
												{
													"key": "stop_loss_timeout_enabled",
													"value": "<boolean>"
												},
												{
													"key": "stop_loss_timeout_in_seconds",
													"value": "<integer>",
													"description": "StopLoss timeout in seconds if StopLoss timeout enabled"
												},
												{
													"key": "min_volume_btc_24h",
													"value": "<double>"
												},
												{
													"key": "tsl_enabled",
													"value": "<boolean>",
													"description": "Enable trailing stop loss. Bitmex only."
												},
												{
													"key": "deal_start_delay_seconds",
													"value": "<integer>",
													"description": "Deal start delay in seconds"
												},
												{
													"key": "profit_currency",
													"value": "<string>",
													"description": "Take profit currency"
												},
												{
													"key": "start_order_type",
													"value": "<string>"
												},
												{
													"key": "stop_loss_type",
													"value": "<string>"
												},
												{
													"key": "disable_after_deals_count",
													"value": "<integer>",
													"description": "Bot will be disabled after opening this number of deals"
												},
												{
													"key": "allowed_deals_on_same_pair",
													"value": "<integer>",
													"description": "Allow specific number of deals on the same pair. Multibot only."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"update"
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Edit bot (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Edit bot (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pairs",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pairs",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "base_order_volume",
															"value": "<double>",
															"description": "(Required) Base order size"
														},
														{
															"key": "take_profit",
															"value": "<double>",
															"description": "(Required) Target profit(percentage)"
														},
														{
															"key": "safety_order_volume",
															"value": "<double>",
															"description": "(Required) Safety trade size"
														},
														{
															"key": "martingale_volume_coefficient",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "martingale_step_coefficient",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "max_safety_orders",
															"value": "<integer>",
															"description": "(Required) Max safety trades count"
														},
														{
															"key": "active_safety_orders_count",
															"value": "<integer>",
															"description": "(Required) Max active safety trades count"
														},
														{
															"key": "safety_order_step_percentage",
															"value": "<double>",
															"description": "(Required) Price deviation to open safety trades(percentage)"
														},
														{
															"key": "take_profit_type",
															"value": "total",
															"description": "(Required) Percentage: base – from base order, total – from total volume"
														},
														{
															"key": "strategy_list",
															"value": "<json>",
															"description": "(Required) For manual signals: [{\"strategy\":\"manual\"}] or []<br>\n                                                        For non-stop(1 pair only): [{\"strategy\":\"nonstop\"}]<br>\n                                                        QFL: {\"options\": {\"type\": \"original\"}, {\"percent\": 3}, \"strategy\": \"qfl\"}] <br>\n                                                        TradingView: [{\"options\": {\"time\": \"5m\", \"type\": \"buy_or_strong_buy\", \"strategy\": \"trading_view\"} "
														},
														{
															"key": "strategy_list",
															"value": "<json>",
															"description": "(Required) For manual signals: [{\"strategy\":\"manual\"}] or []<br>\n                                                        For non-stop(1 pair only): [{\"strategy\":\"nonstop\"}]<br>\n                                                        QFL: {\"options\": {\"type\": \"original\"}, {\"percent\": 3}, \"strategy\": \"qfl\"}] <br>\n                                                        TradingView: [{\"options\": {\"time\": \"5m\", \"type\": \"buy_or_strong_buy\", \"strategy\": \"trading_view\"} "
														},
														{
															"key": "max_active_deals",
															"value": "1"
														},
														{
															"key": "base_order_volume_type",
															"value": "<string>",
															"description": "base order volume currency"
														},
														{
															"key": "safety_order_volume_type",
															"value": "<string>",
															"description": "safety order volume currency"
														},
														{
															"key": "stop_loss_percentage",
															"value": "<double>"
														},
														{
															"key": "cooldown",
															"value": "<double>"
														},
														{
															"key": "trailing_enabled",
															"value": "<boolean>",
															"description": "Enable trailing take profit. Binance only."
														},
														{
															"key": "trailing_deviation",
															"value": "<double>",
															"description": "required if trailing_enabled"
														},
														{
															"key": "btc_price_limit",
															"value": "<double>"
														},
														{
															"key": "leverage_type",
															"value": "not_specified",
															"description": "Used for Bitmex bots only"
														},
														{
															"key": "leverage_custom_value",
															"value": "<double>",
															"description": "required if leverage_type is isolated"
														},
														{
															"key": "min_price",
															"value": "<double>",
															"description": "minimum price to open deal"
														},
														{
															"key": "max_price",
															"value": "<double>",
															"description": "maximum price to open deal"
														},
														{
															"key": "stop_loss_timeout_enabled",
															"value": "<boolean>"
														},
														{
															"key": "stop_loss_timeout_in_seconds",
															"value": "<integer>",
															"description": "StopLoss timeout in seconds if StopLoss timeout enabled"
														},
														{
															"key": "min_volume_btc_24h",
															"value": "<double>"
														},
														{
															"key": "tsl_enabled",
															"value": "<boolean>",
															"description": "Enable trailing stop loss. Bitmex only."
														},
														{
															"key": "deal_start_delay_seconds",
															"value": "<integer>",
															"description": "Deal start delay in seconds"
														},
														{
															"key": "profit_currency",
															"value": "<string>",
															"description": "Take profit currency"
														},
														{
															"key": "start_order_type",
															"value": "<string>"
														},
														{
															"key": "stop_loss_type",
															"value": "<string>"
														},
														{
															"key": "disable_after_deals_count",
															"value": "<integer>",
															"description": "Bot will be disabled after opening this number of deals"
														},
														{
															"key": "allowed_deals_on_same_pair",
															"value": "<integer>",
															"description": "Allow specific number of deals on the same pair. Multibot only."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"update"
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Bots Bot Id Disable",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"disable"
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Disable bot (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Disable bot (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"disable"
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Bots Bot Id Enable",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"enable"
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Enable bot (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Enable bot (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"enable"
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Bots Bot Id Start New Deal",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "pair",
													"value": "<string>",
													"description": "Can be omited for simple bot"
												},
												{
													"key": "skip_signal_checks",
													"value": "<boolean>",
													"description": "If false or not specified then all paramaters like signals or volume filters will be checked. If true - those checks will be skipped"
												},
												{
													"key": "skip_open_deals_checks",
													"value": "<boolean>",
													"description": "If true then you will be allowed to open more then one deal per pair in composite bot"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/start_new_deal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"start_new_deal"
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Start new deal asap (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Start new deal asap (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "pair",
															"value": "<string>",
															"description": "Can be omited for simple bot"
														},
														{
															"key": "skip_signal_checks",
															"value": "<boolean>",
															"description": "If false or not specified then all paramaters like signals or volume filters will be checked. If true - those checks will be skipped"
														},
														{
															"key": "skip_open_deals_checks",
															"value": "<boolean>",
															"description": "If true then you will be allowed to open more then one deal per pair in composite bot"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/start_new_deal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"start_new_deal"
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Bots Bot Id Delete",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"delete"
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete bot (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Delete bot (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"delete"
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Bots Bot Id Panic Sell All Deals",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/panic_sell_all_deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"panic_sell_all_deals"
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Panic sell all bot deals (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Panic sell all bot deals (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/panic_sell_all_deals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"panic_sell_all_deals"
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Bots Bot Id Cancel All Deals",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/cancel_all_deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"cancel_all_deals"
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Cancel all bot deals (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Cancel all bot deals (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/cancel_all_deals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"cancel_all_deals"
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Bots Bot Id Deals Stats",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/deals_stats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"deals_stats"
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Bot deals stats (Permission: BOTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Bot deals stats (Permission: BOTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/deals_stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"deals_stats"
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Bots Bot Id Show",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/:bot_id/show?include_events=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												":bot_id",
												"show"
											],
											"query": [
												{
													"key": "include_events",
													"value": "<boolean>"
												}
											],
											"variable": [
												{
													"key": "bot_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Bot info (Permission: BOTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Bot info (Permission: BOTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/bots/:bot_id/show?include_events=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"bots",
														":bot_id",
														"show"
													],
													"query": [
														{
															"key": "include_events",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "bot_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "get Ver1Bots",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/bots?limit=50&offset=<integer>&from=<string>&account_id=<integer>&scope=<string>&strategy=<string>&sort_by=created_at&sort_direction=desc&quote=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"bots"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Limit records. Max: 100"
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset records"
										},
										{
											"key": "from",
											"value": "<string>",
											"description": "Param for a filter by created date"
										},
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "Account to show bots on. Return all if not specified. Gather this from GET /ver1/accounts"
										},
										{
											"key": "scope",
											"value": "<string>"
										},
										{
											"key": "strategy",
											"value": "<string>"
										},
										{
											"key": "sort_by",
											"value": "created_at"
										},
										{
											"key": "sort_direction",
											"value": "desc"
										},
										{
											"key": "quote",
											"value": "<string>",
											"description": "Quote currency"
										}
									]
								},
								"description": "User bots (Permission: BOTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "User bots (Permission: BOTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots?limit=50&offset=<integer>&from=<string>&account_id=<integer>&scope=<string>&strategy=<string>&sort_by=created_at&sort_direction=desc&quote=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "<integer>"
												},
												{
													"key": "from",
													"value": "<string>"
												},
												{
													"key": "account_id",
													"value": "<integer>"
												},
												{
													"key": "scope",
													"value": "<string>"
												},
												{
													"key": "strategy",
													"value": "<string>"
												},
												{
													"key": "sort_by",
													"value": "created_at"
												},
												{
													"key": "sort_direction",
													"value": "desc"
												},
												{
													"key": "quote",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Bots Strategy List",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/bots/strategy_list?account_id=<integer>&type=<string>&strategy=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"bots",
										"strategy_list"
									],
									"query": [
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "id from GET /ver1/accounts"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "strategy",
											"value": "<string>"
										}
									]
								},
								"description": "Available strategy list for bot (Permission: BOTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Available strategy list for bot (Permission: BOTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/strategy_list?account_id=<integer>&type=<string>&strategy=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												"strategy_list"
											],
											"query": [
												{
													"key": "account_id",
													"value": "<integer>"
												},
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "strategy",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Bots Pairs Black List",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/bots/pairs_black_list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"bots",
										"pairs_black_list"
									]
								},
								"description": "Black List for bot pairs (Permission: BOTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Black List for bot pairs (Permission: BOTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/pairs_black_list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												"pairs_black_list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post Ver1Bots Update Pairs Black List",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "pairs",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "pairs",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/bots/update_pairs_black_list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"bots",
										"update_pairs_black_list"
									]
								},
								"description": "Create or Update pairs BlackList for bots (Permission: BOTS_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Create or Update pairs BlackList for bots (Permission: BOTS_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "pairs",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "pairs",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/update_pairs_black_list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												"update_pairs_black_list"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post Ver1Bots Create Bot",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "(Required) id from GET /ver1/accounts"
										},
										{
											"key": "pairs",
											"value": "<string>",
											"description": "(Required) Pass single pair to create SingleBot or any other number of pairs to create MultiBot"
										},
										{
											"key": "pairs",
											"value": "<string>",
											"description": "(Required) Pass single pair to create SingleBot or any other number of pairs to create MultiBot"
										},
										{
											"key": "base_order_volume",
											"value": "<double>",
											"description": "(Required) Base order size"
										},
										{
											"key": "take_profit",
											"value": "<double>",
											"description": "(Required) Target profit(percentage)"
										},
										{
											"key": "safety_order_volume",
											"value": "<double>",
											"description": "(Required) Safety trade size"
										},
										{
											"key": "martingale_volume_coefficient",
											"value": "1",
											"description": "(Required) "
										},
										{
											"key": "martingale_step_coefficient",
											"value": "1",
											"description": "(Required) "
										},
										{
											"key": "max_safety_orders",
											"value": "<integer>",
											"description": "(Required) Max safety trades count"
										},
										{
											"key": "active_safety_orders_count",
											"value": "<integer>",
											"description": "(Required) Max active safety trades count"
										},
										{
											"key": "safety_order_step_percentage",
											"value": "<double>",
											"description": "(Required) Price deviation to open safety trades(percentage)"
										},
										{
											"key": "take_profit_type",
											"value": "base",
											"description": "(Required) Percentage: base – from base order, total – from total volume"
										},
										{
											"key": "strategy_list",
											"value": "<json>",
											"description": "(Required) For manual signals: [{\"strategy\":\"manual\"}] or []<br>\n                                                        For non-stop(1 pair only): [{\"strategy\":\"nonstop\"}]<br>\n                                                        QFL: {\"options\": {\"type\": \"original\"}, {\"percent\": 3}, \"strategy\": \"qfl\"}] <br>\n                                                        TradingView: [{\"options\": {\"time\": \"5m\", \"type\": \"buy_or_strong_buy\"}, \"strategy\": \"trading_view\"} "
										},
										{
											"key": "strategy_list",
											"value": "<json>",
											"description": "(Required) For manual signals: [{\"strategy\":\"manual\"}] or []<br>\n                                                        For non-stop(1 pair only): [{\"strategy\":\"nonstop\"}]<br>\n                                                        QFL: {\"options\": {\"type\": \"original\"}, {\"percent\": 3}, \"strategy\": \"qfl\"}] <br>\n                                                        TradingView: [{\"options\": {\"time\": \"5m\", \"type\": \"buy_or_strong_buy\"}, \"strategy\": \"trading_view\"} "
										},
										{
											"key": "max_active_deals",
											"value": "1"
										},
										{
											"key": "base_order_volume_type",
											"value": "<string>",
											"description": "base order volume currency"
										},
										{
											"key": "safety_order_volume_type",
											"value": "<string>",
											"description": "safety order volume currency"
										},
										{
											"key": "stop_loss_percentage",
											"value": "<double>"
										},
										{
											"key": "cooldown",
											"value": "<double>"
										},
										{
											"key": "trailing_enabled",
											"value": "<boolean>",
											"description": "Enable trailing take profit. Binance only."
										},
										{
											"key": "trailing_deviation",
											"value": "<double>",
											"description": "required if trailing_enabled"
										},
										{
											"key": "btc_price_limit",
											"value": "<double>"
										},
										{
											"key": "strategy",
											"value": "long"
										},
										{
											"key": "leverage_type",
											"value": "not_specified",
											"description": "Used for Bitmex bots only"
										},
										{
											"key": "leverage_custom_value",
											"value": "<double>",
											"description": "required if leverage_type is isolated"
										},
										{
											"key": "min_price",
											"value": "<double>",
											"description": "minimum price to open deal"
										},
										{
											"key": "max_price",
											"value": "<double>",
											"description": "maximum price to open deal"
										},
										{
											"key": "stop_loss_timeout_enabled",
											"value": "<boolean>"
										},
										{
											"key": "stop_loss_timeout_in_seconds",
											"value": "<integer>",
											"description": "StopLoss timeout in seconds if StopLoss timeout enabled"
										},
										{
											"key": "min_volume_btc_24h",
											"value": "<double>"
										},
										{
											"key": "tsl_enabled",
											"value": "<boolean>",
											"description": "Enable trailing stop loss. Bitmex only."
										},
										{
											"key": "deal_start_delay_seconds",
											"value": "<integer>",
											"description": "Deal start delay in seconds"
										},
										{
											"key": "profit_currency",
											"value": "<string>",
											"description": "Take profit currency"
										},
										{
											"key": "start_order_type",
											"value": "<string>"
										},
										{
											"key": "stop_loss_type",
											"value": "<string>"
										},
										{
											"key": "disable_after_deals_count",
											"value": "<integer>",
											"description": "Bot will be disabled after opening this number of deals"
										},
										{
											"key": "allowed_deals_on_same_pair",
											"value": "<integer>",
											"description": "Allow specific number of deals on the same pair. Multibot only."
										},
										{
											"key": "close_deals_timeout",
											"value": "<integer>",
											"description": "Close bot deals after given number of seconds. Must be greater than 60."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/bots/create_bot",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"bots",
										"create_bot"
									]
								},
								"description": "Create bot (Permission: BOTS_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Create bot (Permission: BOTS_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) id from GET /ver1/accounts"
												},
												{
													"key": "pairs",
													"value": "<string>",
													"description": "(Required) Pass single pair to create SingleBot or any other number of pairs to create MultiBot"
												},
												{
													"key": "pairs",
													"value": "<string>",
													"description": "(Required) Pass single pair to create SingleBot or any other number of pairs to create MultiBot"
												},
												{
													"key": "base_order_volume",
													"value": "<double>",
													"description": "(Required) Base order size"
												},
												{
													"key": "take_profit",
													"value": "<double>",
													"description": "(Required) Target profit(percentage)"
												},
												{
													"key": "safety_order_volume",
													"value": "<double>",
													"description": "(Required) Safety trade size"
												},
												{
													"key": "martingale_volume_coefficient",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "martingale_step_coefficient",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "max_safety_orders",
													"value": "<integer>",
													"description": "(Required) Max safety trades count"
												},
												{
													"key": "active_safety_orders_count",
													"value": "<integer>",
													"description": "(Required) Max active safety trades count"
												},
												{
													"key": "safety_order_step_percentage",
													"value": "<double>",
													"description": "(Required) Price deviation to open safety trades(percentage)"
												},
												{
													"key": "take_profit_type",
													"value": "base",
													"description": "(Required) Percentage: base – from base order, total – from total volume"
												},
												{
													"key": "strategy_list",
													"value": "<json>",
													"description": "(Required) For manual signals: [{\"strategy\":\"manual\"}] or []<br>\n                                                        For non-stop(1 pair only): [{\"strategy\":\"nonstop\"}]<br>\n                                                        QFL: {\"options\": {\"type\": \"original\"}, {\"percent\": 3}, \"strategy\": \"qfl\"}] <br>\n                                                        TradingView: [{\"options\": {\"time\": \"5m\", \"type\": \"buy_or_strong_buy\"}, \"strategy\": \"trading_view\"} "
												},
												{
													"key": "strategy_list",
													"value": "<json>",
													"description": "(Required) For manual signals: [{\"strategy\":\"manual\"}] or []<br>\n                                                        For non-stop(1 pair only): [{\"strategy\":\"nonstop\"}]<br>\n                                                        QFL: {\"options\": {\"type\": \"original\"}, {\"percent\": 3}, \"strategy\": \"qfl\"}] <br>\n                                                        TradingView: [{\"options\": {\"time\": \"5m\", \"type\": \"buy_or_strong_buy\"}, \"strategy\": \"trading_view\"} "
												},
												{
													"key": "max_active_deals",
													"value": "1"
												},
												{
													"key": "base_order_volume_type",
													"value": "<string>",
													"description": "base order volume currency"
												},
												{
													"key": "safety_order_volume_type",
													"value": "<string>",
													"description": "safety order volume currency"
												},
												{
													"key": "stop_loss_percentage",
													"value": "<double>"
												},
												{
													"key": "cooldown",
													"value": "<double>"
												},
												{
													"key": "trailing_enabled",
													"value": "<boolean>",
													"description": "Enable trailing take profit. Binance only."
												},
												{
													"key": "trailing_deviation",
													"value": "<double>",
													"description": "required if trailing_enabled"
												},
												{
													"key": "btc_price_limit",
													"value": "<double>"
												},
												{
													"key": "strategy",
													"value": "long"
												},
												{
													"key": "leverage_type",
													"value": "not_specified",
													"description": "Used for Bitmex bots only"
												},
												{
													"key": "leverage_custom_value",
													"value": "<double>",
													"description": "required if leverage_type is isolated"
												},
												{
													"key": "min_price",
													"value": "<double>",
													"description": "minimum price to open deal"
												},
												{
													"key": "max_price",
													"value": "<double>",
													"description": "maximum price to open deal"
												},
												{
													"key": "stop_loss_timeout_enabled",
													"value": "<boolean>"
												},
												{
													"key": "stop_loss_timeout_in_seconds",
													"value": "<integer>",
													"description": "StopLoss timeout in seconds if StopLoss timeout enabled"
												},
												{
													"key": "min_volume_btc_24h",
													"value": "<double>"
												},
												{
													"key": "tsl_enabled",
													"value": "<boolean>",
													"description": "Enable trailing stop loss. Bitmex only."
												},
												{
													"key": "deal_start_delay_seconds",
													"value": "<integer>",
													"description": "Deal start delay in seconds"
												},
												{
													"key": "profit_currency",
													"value": "<string>",
													"description": "Take profit currency"
												},
												{
													"key": "start_order_type",
													"value": "<string>"
												},
												{
													"key": "stop_loss_type",
													"value": "<string>"
												},
												{
													"key": "disable_after_deals_count",
													"value": "<integer>",
													"description": "Bot will be disabled after opening this number of deals"
												},
												{
													"key": "allowed_deals_on_same_pair",
													"value": "<integer>",
													"description": "Allow specific number of deals on the same pair. Multibot only."
												},
												{
													"key": "close_deals_timeout",
													"value": "<integer>",
													"description": "Close bot deals after given number of seconds. Must be greater than 60."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/create_bot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												"create_bot"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Bots Stats",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/bots/stats?account_id=<integer>&bot_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"bots",
										"stats"
									],
									"query": [
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "Account to show on. Null - show for all. Gather this from GET /ver1/accounts"
										},
										{
											"key": "bot_id",
											"value": "<integer>",
											"description": "Bots to show on. Null - show for all"
										}
									]
								},
								"description": "Get bot stats (Permission: BOTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Get bot stats (Permission: BOTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/bots/stats?account_id=<integer>&bot_id=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"bots",
												"stats"
											],
											"query": [
												{
													"key": "account_id",
													"value": "<integer>"
												},
												{
													"key": "bot_id",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "deals",
					"item": [
						{
							"name": "{deal id}",
							"item": [
								{
									"name": "post Ver1Deals Deal Id Convert To Smart Trade",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "stop_bot",
													"value": "<boolean>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/convert_to_smart_trade",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"convert_to_smart_trade"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Convert to smart trade (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Convert to smart trade (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "stop_bot",
															"value": "<boolean>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/convert_to_smart_trade",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"convert_to_smart_trade"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Deals Deal Id Update Max Safety Orders",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "max_safety_orders",
													"value": "<integer>",
													"description": "(Required) New maximum safety orders value"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/update_max_safety_orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"update_max_safety_orders"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Update max safety orders (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Update max safety orders (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "max_safety_orders",
															"value": "<integer>",
															"description": "(Required) New maximum safety orders value"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/update_max_safety_orders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"update_max_safety_orders"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Deals Deal Id Panic Sell",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/panic_sell",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"panic_sell"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Panic sell deal (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Panic sell deal (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/panic_sell",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"panic_sell"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Deals Deal Id Cancel",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"cancel"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Cancel deal (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Cancel deal (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"cancel"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "patch Ver1Deals Deal Id Update Deal",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "take_profit",
													"value": "<double>",
													"description": "New take profit value"
												},
												{
													"key": "profit_currency",
													"value": "<string>"
												},
												{
													"key": "take_profit_type",
													"value": "<string>",
													"description": "base – from base order, total – from total volume"
												},
												{
													"key": "trailing_enabled",
													"value": "<boolean>"
												},
												{
													"key": "trailing_deviation",
													"value": "<double>",
													"description": "New trailing deviation value"
												},
												{
													"key": "stop_loss_percentage",
													"value": "<double>",
													"description": "New stop loss percentage value"
												},
												{
													"key": "max_safety_orders",
													"value": "<integer>",
													"description": "New max safety orders value"
												},
												{
													"key": "active_safety_orders_count",
													"value": "<integer>",
													"description": "New active safety orders count value"
												},
												{
													"key": "stop_loss_timeout_enabled",
													"value": "<boolean>"
												},
												{
													"key": "stop_loss_timeout_in_seconds",
													"value": "<integer>",
													"description": "StopLoss timeout in seconds if StopLoss timeout enabled"
												},
												{
													"key": "tsl_enabled",
													"value": "<boolean>",
													"description": "Trailing stop loss enabled"
												},
												{
													"key": "stop_loss_type",
													"value": "<string>"
												},
												{
													"key": "close_timeout",
													"value": "<integer>",
													"description": "Close deal after given number of seconds. Must be greater than 60."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/update_deal",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"update_deal"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Update deal (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Update deal (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "take_profit",
															"value": "<double>",
															"description": "New take profit value"
														},
														{
															"key": "profit_currency",
															"value": "<string>"
														},
														{
															"key": "take_profit_type",
															"value": "<string>",
															"description": "base – from base order, total – from total volume"
														},
														{
															"key": "trailing_enabled",
															"value": "<boolean>"
														},
														{
															"key": "trailing_deviation",
															"value": "<double>",
															"description": "New trailing deviation value"
														},
														{
															"key": "stop_loss_percentage",
															"value": "<double>",
															"description": "New stop loss percentage value"
														},
														{
															"key": "max_safety_orders",
															"value": "<integer>",
															"description": "New max safety orders value"
														},
														{
															"key": "active_safety_orders_count",
															"value": "<integer>",
															"description": "New active safety orders count value"
														},
														{
															"key": "stop_loss_timeout_enabled",
															"value": "<boolean>"
														},
														{
															"key": "stop_loss_timeout_in_seconds",
															"value": "<integer>",
															"description": "StopLoss timeout in seconds if StopLoss timeout enabled"
														},
														{
															"key": "tsl_enabled",
															"value": "<boolean>",
															"description": "Trailing stop loss enabled"
														},
														{
															"key": "stop_loss_type",
															"value": "<string>"
														},
														{
															"key": "close_timeout",
															"value": "<integer>",
															"description": "Close deal after given number of seconds. Must be greater than 60."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/update_deal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"update_deal"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Deals Deal Id Update Tp",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "new_take_profit_percentage",
													"value": "<double>",
													"description": "(Required) New take profit value"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/update_tp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"update_tp"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "DEPRECATED, Update take profit condition. Deal status should be bought (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "DEPRECATED, Update take profit condition. Deal status should be bought (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "new_take_profit_percentage",
															"value": "<double>",
															"description": "(Required) New take profit value"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/update_tp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"update_tp"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Deals Deal Id Show",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/show",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"show"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Info about specific deal (Permission: BOTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Info about specific deal (Permission: BOTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/show",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"show"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Deals Deal Id Cancel Order",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "order_id",
													"value": "<string>",
													"description": "(Required) manual safety order id"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/cancel_order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"cancel_order"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Cancel manual safety orders (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Cancel manual safety orders (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "order_id",
															"value": "<string>",
															"description": "(Required) manual safety order id"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/cancel_order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"cancel_order"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Deals Deal Id Market Orders",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/market_orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"market_orders"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Deal safety orders (Permission: BOTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Deal safety orders (Permission: BOTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/market_orders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"market_orders"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Deals Deal Id Add Funds",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "quantity",
													"value": "<double>",
													"description": "(Required) safety order quantity"
												},
												{
													"key": "is_market",
													"value": "<boolean>",
													"description": "(Required) true - use MARKET order, false - use LIMIT order"
												},
												{
													"key": "rate",
													"value": "<double>",
													"description": "(Required) safety order rate. Required if LIMIT order used"
												},
												{
													"key": "response_type",
													"value": "empty"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/add_funds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"add_funds"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Adding manual safety order (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Adding manual safety order (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "quantity",
															"value": "<double>",
															"description": "(Required) safety order quantity"
														},
														{
															"key": "is_market",
															"value": "<boolean>",
															"description": "(Required) true - use MARKET order, false - use LIMIT order"
														},
														{
															"key": "rate",
															"value": "<double>",
															"description": "(Required) safety order rate. Required if LIMIT order used"
														},
														{
															"key": "response_type",
															"value": "empty"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/add_funds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"add_funds"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Deals Deal Id Data For Adding Funds",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/deals/:deal_id/data_for_adding_funds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals",
												":deal_id",
												"data_for_adding_funds"
											],
											"variable": [
												{
													"key": "deal_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Info required to add funds correctly: available amounts, exchange limitations etc  (Permission: BOTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Info required to add funds correctly: available amounts, exchange limitations etc  (Permission: BOTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/deals/:deal_id/data_for_adding_funds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"deals",
														":deal_id",
														"data_for_adding_funds"
													],
													"variable": [
														{
															"key": "deal_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "get Ver1Deals",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/deals?limit=50&offset=<integer>&from=<string>&account_id=<integer>&bot_id=<integer>&scope=<string>&order=created_at&order_direction=desc&base=<string>&quote=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"deals"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Limit records. Max: 1_000"
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset records"
										},
										{
											"key": "from",
											"value": "<string>",
											"description": "Param for a filter by created date"
										},
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "Account to show bots on. Return all if not specified. Gather this from GET /ver1/accounts"
										},
										{
											"key": "bot_id",
											"value": "<integer>",
											"description": "Bot show deals on. Return all if not specified"
										},
										{
											"key": "scope",
											"value": "<string>",
											"description": "active - active deals, finished - finished deals, completed - successfully completed, cancelled - cancelled deals, failed - failed deals, any other value or null (default) - all deals"
										},
										{
											"key": "order",
											"value": "created_at"
										},
										{
											"key": "order_direction",
											"value": "desc"
										},
										{
											"key": "base",
											"value": "<string>",
											"description": "Base currency"
										},
										{
											"key": "quote",
											"value": "<string>",
											"description": "Quote currency"
										}
									]
								},
								"description": "User deals (Permission: BOTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "User deals (Permission: BOTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/deals?limit=50&offset=<integer>&from=<string>&account_id=<integer>&bot_id=<integer>&scope=<string>&order=created_at&order_direction=desc&base=<string>&quote=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"deals"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "<integer>"
												},
												{
													"key": "from",
													"value": "<string>"
												},
												{
													"key": "account_id",
													"value": "<integer>"
												},
												{
													"key": "bot_id",
													"value": "<integer>"
												},
												{
													"key": "scope",
													"value": "<string>"
												},
												{
													"key": "order",
													"value": "created_at"
												},
												{
													"key": "order_direction",
													"value": "desc"
												},
												{
													"key": "base",
													"value": "<string>"
												},
												{
													"key": "quote",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "get Ver1Users Current Mode",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/users/current_mode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"users",
										"current_mode"
									]
								},
								"description": "Current User Mode (Paper or Real) (Permission: ACCOUNTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Current User Mode (Paper or Real) (Permission: ACCOUNTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/users/current_mode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"users",
												"current_mode"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post Ver1Users Change Mode",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "mode",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/users/change_mode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"users",
										"change_mode"
									]
								},
								"description": "Change User Mode (Paper or Real) (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Change User Mode (Paper or Real) (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "mode",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/users/change_mode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"users",
												"change_mode"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "accounts",
					"item": [
						{
							"name": "{account id}",
							"item": [
								{
									"name": "get Ver1Accounts Account Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Single Account Info (Permission: ACCOUNTS_READ, Security: SIGNED)\nYou can send 'summary' instead of {account_id} to get summary account info"
									},
									"response": [
										{
											"name": "Single Account Info (Permission: ACCOUNTS_READ, Security: SIGNED)\nYou can send 'summary' instead of {account_id} to get summary account info",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Accounts Account Id Deposit Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/deposit_data?currency=<string>&network=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"deposit_data"
											],
											"query": [
												{
													"key": "currency",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "network",
													"value": "<string>",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "User Deposit Data (Permission: ACCOUNTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "User Deposit Data (Permission: ACCOUNTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/deposit_data?currency=<string>&network=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"deposit_data"
													],
													"query": [
														{
															"key": "currency",
															"value": "<string>"
														},
														{
															"key": "network",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Accounts Account Id Networks Info",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/networks_info?purpose=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"networks_info"
											],
											"query": [
												{
													"key": "purpose",
													"value": "<string>",
													"description": "Filter currencies with deposit/withdraw enabled"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Deposit/withdraw networks info (Permission: ACCOUNTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Deposit/withdraw networks info (Permission: ACCOUNTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/networks_info?purpose=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"networks_info"
													],
													"query": [
														{
															"key": "purpose",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Accounts Account Id Convert Dust To Bnb",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "codes",
													"value": "<string>",
													"description": "Array of currency codes"
												},
												{
													"key": "codes",
													"value": "<string>",
													"description": "Array of currency codes"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/convert_dust_to_bnb",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"convert_dust_to_bnb"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Convert dust coins to BNB (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Convert dust coins to BNB (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "codes",
															"value": "<string>",
															"description": "Array of currency codes"
														},
														{
															"key": "codes",
															"value": "<string>",
															"description": "Array of currency codes"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/convert_dust_to_bnb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"convert_dust_to_bnb"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Accounts Account Id Active Trading Entities",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/active_trading_entities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"active_trading_entities"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Active trade entities (Permission: ACCOUNTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Active trade entities (Permission: ACCOUNTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/active_trading_entities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"active_trading_entities"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Accounts Account Id Sell All To Usd",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/sell_all_to_usd",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"sell_all_to_usd"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Sell all to USD  (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Sell all to USD  (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/sell_all_to_usd",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"sell_all_to_usd"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Accounts Account Id Sell All To Btc",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/sell_all_to_btc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"sell_all_to_btc"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Sell all to BTC  (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Sell all to BTC  (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/sell_all_to_btc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"sell_all_to_btc"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Accounts Account Id Balance Chart Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/balance_chart_data?date_from=<dateTime>&date_to=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"balance_chart_data"
											],
											"query": [
												{
													"key": "date_from",
													"value": "<dateTime>",
													"description": "(Required) "
												},
												{
													"key": "date_to",
													"value": "<dateTime>"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "balance history data (Permission: ACCOUNTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "balance history data (Permission: ACCOUNTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/balance_chart_data?date_from=<dateTime>&date_to=<dateTime>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"balance_chart_data"
													],
													"query": [
														{
															"key": "date_from",
															"value": "<dateTime>"
														},
														{
															"key": "date_to",
															"value": "<dateTime>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Accounts Account Id Load Balances",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/load_balances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"load_balances"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Load balances for specified exchange  (Permission: ACCOUNTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Load balances for specified exchange  (Permission: ACCOUNTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/load_balances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"load_balances"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Accounts Account Id Rename",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/rename",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"rename"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Rename exchange connection  (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Rename exchange connection  (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/rename",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"rename"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Accounts Account Id Pie Chart Data",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/pie_chart_data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"pie_chart_data"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Information about all user balances on specified exchange in pretty for pie chart format (Permission: ACCOUNTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Information about all user balances on specified exchange in pretty for pie chart format (Permission: ACCOUNTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/pie_chart_data",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"pie_chart_data"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Accounts Account Id Account Table Data",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/account_table_data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"account_table_data"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Information about all user balances on specified exchange  (Permission: ACCOUNTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Information about all user balances on specified exchange  (Permission: ACCOUNTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/account_table_data",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"account_table_data"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Accounts Account Id Remove",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"remove"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Remove exchange connection  (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Remove exchange connection  (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"remove"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Accounts Account Id Leverage Data",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/:account_id/leverage_data?pair=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												":account_id",
												"leverage_data"
											],
											"query": [
												{
													"key": "pair",
													"value": "<string>",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Information about account leverage (Permission: ACCOUNTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Information about account leverage (Permission: ACCOUNTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/accounts/:account_id/leverage_data?pair=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"accounts",
														":account_id",
														"leverage_data"
													],
													"query": [
														{
															"key": "pair",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "get Ver1Accounts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts"
									]
								},
								"description": "User connected exchanges(and EthereumWallet) list (Permission: ACCOUNTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "User connected exchanges(and EthereumWallet) list (Permission: ACCOUNTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post Ver1Accounts Transfer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "currency",
											"value": "<string>",
											"description": "(Required) Currency code(example: USDT)"
										},
										{
											"key": "amount",
											"value": "<double>",
											"description": "(Required) "
										},
										{
											"key": "to_account_id",
											"value": "<integer>",
											"description": "(Required) Recipient account ID (possible values in /transfer_data)"
										},
										{
											"key": "from_account_id",
											"value": "<integer>",
											"description": "(Required) Sender account ID (possible values in /transfer_data)"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts",
										"transfer"
									]
								},
								"description": "Transfer coins between accounts (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Transfer coins between accounts (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "currency",
													"value": "<string>",
													"description": "(Required) Currency code(example: USDT)"
												},
												{
													"key": "amount",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "to_account_id",
													"value": "<integer>",
													"description": "(Required) Recipient account ID (possible values in /transfer_data)"
												},
												{
													"key": "from_account_id",
													"value": "<integer>",
													"description": "(Required) Sender account ID (possible values in /transfer_data)"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/transfer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												"transfer"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Accounts Transfer History",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts/transfer_history?account_id=<integer>&currency=<string>&page=1&per_page=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts",
										"transfer_history"
									],
									"query": [
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "(Required) Sender or Recipient account ID (possible values in /transfer_data)"
										},
										{
											"key": "currency",
											"value": "<string>",
											"description": "(Required) Currency code(example: USDT)"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "per_page",
											"value": "10",
											"description": "Elements per page"
										}
									]
								},
								"description": "Transfers history (Permission: ACCOUNTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Transfers history (Permission: ACCOUNTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/transfer_history?account_id=<integer>&currency=<string>&page=1&per_page=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												"transfer_history"
											],
											"query": [
												{
													"key": "account_id",
													"value": "<integer>"
												},
												{
													"key": "currency",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "per_page",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Accounts Transfer Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts/transfer_data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts",
										"transfer_data"
									]
								},
								"description": "Data for transfer between accounts (Permission: ACCOUNTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Data for transfer between accounts (Permission: ACCOUNTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/transfer_data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												"transfer_data"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post Ver1Accounts New",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) check market_code in market_list method"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "(Required) Account name (any string)"
										},
										{
											"key": "api_key",
											"value": "<string>",
											"description": "Requires unless type = binance_dex"
										},
										{
											"key": "secret",
											"value": "<string>",
											"description": "Requires unless type = binance_dex"
										},
										{
											"key": "address",
											"value": "<string>",
											"description": "Requires if type = ethereumwallet"
										},
										{
											"key": "customer_id",
											"value": "<string>",
											"description": "For Bitstamp"
										},
										{
											"key": "passphrase",
											"value": "<string>",
											"description": "For Coinbase Pro (GDAX)"
										},
										{
											"key": "how_connect",
											"value": "<string>"
										},
										{
											"key": "keystore",
											"value": "<json>",
											"description": "keystore file content. Requires if type = binance_dex and how_connect = keystore"
										},
										{
											"key": "wallet_password",
											"value": "<string>",
											"description": "Requires if type = binance_dex and how_connect = keystore"
										},
										{
											"key": "mnemonic_phrase",
											"value": "<string>",
											"description": "Requires if type = binance_dex and how_connect = mnemonic_phrase"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts/new",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts",
										"new"
									]
								},
								"description": "Add exchange account  (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Add exchange account  (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "type",
													"value": "<string>",
													"description": "(Required) check market_code in market_list method"
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) Account name (any string)"
												},
												{
													"key": "api_key",
													"value": "<string>",
													"description": "Requires unless type = binance_dex"
												},
												{
													"key": "secret",
													"value": "<string>",
													"description": "Requires unless type = binance_dex"
												},
												{
													"key": "address",
													"value": "<string>",
													"description": "Requires if type = ethereumwallet"
												},
												{
													"key": "customer_id",
													"value": "<string>",
													"description": "For Bitstamp"
												},
												{
													"key": "passphrase",
													"value": "<string>",
													"description": "For Coinbase Pro (GDAX)"
												},
												{
													"key": "how_connect",
													"value": "<string>"
												},
												{
													"key": "keystore",
													"value": "<json>",
													"description": "keystore file content. Requires if type = binance_dex and how_connect = keystore"
												},
												{
													"key": "wallet_password",
													"value": "<string>",
													"description": "Requires if type = binance_dex and how_connect = keystore"
												},
												{
													"key": "mnemonic_phrase",
													"value": "<string>",
													"description": "Requires if type = binance_dex and how_connect = mnemonic_phrase"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/new",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												"new"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post Ver1Accounts Update",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "Account name (any string)"
										},
										{
											"key": "api_key",
											"value": "<string>"
										},
										{
											"key": "secret",
											"value": "<string>"
										},
										{
											"key": "customer_id",
											"value": "<string>",
											"description": "For Bitstamp"
										},
										{
											"key": "passphrase",
											"value": "<string>",
											"description": "For Coinbase Pro (GDAX)"
										},
										{
											"key": "address",
											"value": "<string>",
											"description": "For accounts with type = ethereumwallet"
										},
										{
											"key": "how_connect",
											"value": "<string>"
										},
										{
											"key": "keystore",
											"value": "<json>"
										},
										{
											"key": "wallet_password",
											"value": "<string>"
										},
										{
											"key": "mnemonic_phrase",
											"value": "<string>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts/update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts",
										"update"
									]
								},
								"description": "Edit exchange account"
							},
							"response": [
								{
									"name": "Edit exchange account",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "Account name (any string)"
												},
												{
													"key": "api_key",
													"value": "<string>"
												},
												{
													"key": "secret",
													"value": "<string>"
												},
												{
													"key": "customer_id",
													"value": "<string>",
													"description": "For Bitstamp"
												},
												{
													"key": "passphrase",
													"value": "<string>",
													"description": "For Coinbase Pro (GDAX)"
												},
												{
													"key": "address",
													"value": "<string>",
													"description": "For accounts with type = ethereumwallet"
												},
												{
													"key": "how_connect",
													"value": "<string>"
												},
												{
													"key": "keystore",
													"value": "<json>"
												},
												{
													"key": "wallet_password",
													"value": "<string>"
												},
												{
													"key": "mnemonic_phrase",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												"update"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Accounts Market List",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts/market_list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts",
										"market_list"
									]
								},
								"description": "Supported markets list (Permission: NONE, Security: NONE)"
							},
							"response": [
								{
									"name": "Supported markets list (Permission: NONE, Security: NONE)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/market_list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												"market_list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Accounts Market Pairs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts/market_pairs?pretty_display_type=<string>&market_code=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts",
										"market_pairs"
									],
									"query": [
										{
											"key": "pretty_display_type",
											"value": "<string>",
											"description": "deprecated. mandatory use market_code instead"
										},
										{
											"key": "market_code",
											"value": "<string>",
											"description": "market_code from account model"
										}
									]
								},
								"description": "All market pairs (Permission: NONE, Security: NONE)"
							},
							"response": [
								{
									"name": "All market pairs (Permission: NONE, Security: NONE)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/market_pairs?pretty_display_type=<string>&market_code=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												"market_pairs"
											],
											"query": [
												{
													"key": "pretty_display_type",
													"value": "<string>"
												},
												{
													"key": "market_code",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Accounts Currency Rates With Leverage Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts/currency_rates_with_leverage_data?market_code=<string>&pair=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts",
										"currency_rates_with_leverage_data"
									],
									"query": [
										{
											"key": "market_code",
											"value": "<string>",
											"description": "(Required) market_code from account model"
										},
										{
											"key": "pair",
											"value": "<string>",
											"description": "(Required) Pair"
										}
									]
								},
								"description": "Currency rates and limits with leverage data (Permission: NONE, Security: NONE)"
							},
							"response": [
								{
									"name": "Currency rates and limits with leverage data (Permission: NONE, Security: NONE)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/currency_rates_with_leverage_data?market_code=<string>&pair=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												"currency_rates_with_leverage_data"
											],
											"query": [
												{
													"key": "market_code",
													"value": "<string>"
												},
												{
													"key": "pair",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Accounts Currency Rates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/accounts/currency_rates?pretty_display_type=<string>&market_code=<string>&pair=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"accounts",
										"currency_rates"
									],
									"query": [
										{
											"key": "pretty_display_type",
											"value": "<string>",
											"description": "deprecated. use market_code instead"
										},
										{
											"key": "market_code",
											"value": "<string>",
											"description": "market_code from account model. If you are retrieving data for pairs, you must also include market_code"
										},
										{
											"key": "pair",
											"value": "<string>",
											"description": "(Required) Pair"
										}
									]
								},
								"description": "Currency rates and limits (Permission: NONE, Security: NONE)"
							},
							"response": [
								{
									"name": "Currency rates and limits (Permission: NONE, Security: NONE)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/accounts/currency_rates?pretty_display_type=<string>&market_code=<string>&pair=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"accounts",
												"currency_rates"
											],
											"query": [
												{
													"key": "pretty_display_type",
													"value": "<string>"
												},
												{
													"key": "market_code",
													"value": "<string>"
												},
												{
													"key": "pair",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "marketplace",
					"item": [
						{
							"name": "get Ver1Marketplace Presets",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ver1/marketplace/presets?profit_per_day_from=<double>&profit_per_day_to=<double>&profit_per_month_from=<double>&profit_per_month_to=<double>&with_all_market_pairs=<boolean>&days_running_from=<integer>&days_running_to=<integer>&bot_type=<string>&bot_strategy=<string>&cmc=<string>&sort_by=<string>&sort_direction=<string>&page=1&per_page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"marketplace",
										"presets"
									],
									"query": [
										{
											"key": "profit_per_day_from",
											"value": "<double>"
										},
										{
											"key": "profit_per_day_to",
											"value": "<double>"
										},
										{
											"key": "profit_per_month_from",
											"value": "<double>"
										},
										{
											"key": "profit_per_month_to",
											"value": "<double>"
										},
										{
											"key": "with_all_market_pairs",
											"value": "<boolean>"
										},
										{
											"key": "days_running_from",
											"value": "<integer>"
										},
										{
											"key": "days_running_to",
											"value": "<integer>"
										},
										{
											"key": "bot_type",
											"value": "<string>"
										},
										{
											"key": "bot_strategy",
											"value": "<string>"
										},
										{
											"key": "cmc",
											"value": "<string>"
										},
										{
											"key": "sort_by",
											"value": "<string>"
										},
										{
											"key": "sort_direction",
											"value": "<string>"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										}
									]
								},
								"description": "Marketplace presets (Permission: NONE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Marketplace presets (Permission: NONE, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/marketplace/presets?profit_per_day_from=<double>&profit_per_day_to=<double>&profit_per_month_from=<double>&profit_per_month_to=<double>&with_all_market_pairs=<boolean>&days_running_from=<integer>&days_running_to=<integer>&bot_type=<string>&bot_strategy=<string>&cmc=<string>&sort_by=<string>&sort_direction=<string>&page=1&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"marketplace",
												"presets"
											],
											"query": [
												{
													"key": "profit_per_day_from",
													"value": "<double>"
												},
												{
													"key": "profit_per_day_to",
													"value": "<double>"
												},
												{
													"key": "profit_per_month_from",
													"value": "<double>"
												},
												{
													"key": "profit_per_month_to",
													"value": "<double>"
												},
												{
													"key": "with_all_market_pairs",
													"value": "<boolean>"
												},
												{
													"key": "days_running_from",
													"value": "<integer>"
												},
												{
													"key": "days_running_to",
													"value": "<integer>"
												},
												{
													"key": "bot_type",
													"value": "<string>"
												},
												{
													"key": "bot_strategy",
													"value": "<string>"
												},
												{
													"key": "cmc",
													"value": "<string>"
												},
												{
													"key": "sort_by",
													"value": "<string>"
												},
												{
													"key": "sort_direction",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"bots\": [\n  {\n   \"id\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"name\": \"<string>\",\n   \"strategy\": \"<string>\",\n   \"secret\": \"<string>\",\n   \"marketplace_item\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"icon_url\": \"<string>\"\n   },\n   \"profit\": {\n    \"period\": \"<string>\",\n    \"amount\": \"<double>\",\n    \"chart_data\": [\n     \"<double>\",\n     \"<double>\"\n    ]\n   },\n   \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"copies\": \"<integer>\",\n   \"is_favorite\": \"<boolean>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"type\": \"<string>\",\n   \"name\": \"<string>\",\n   \"strategy\": \"<string>\",\n   \"secret\": \"<string>\",\n   \"marketplace_item\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"icon_url\": \"<string>\"\n   },\n   \"profit\": {\n    \"period\": \"<string>\",\n    \"amount\": \"<double>\",\n    \"chart_data\": [\n     \"<double>\",\n     \"<double>\"\n    ]\n   },\n   \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"copies\": \"<integer>\",\n   \"is_favorite\": \"<boolean>\"\n  }\n ],\n \"total\": \"<integer>\",\n \"page\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "get Ver1Marketplace Items",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/marketplace/items?limit=50&offset=<integer>&scope=all&order=newest&locale=en",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"marketplace",
										"items"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Limit records. Max: 1_000"
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset records"
										},
										{
											"key": "scope",
											"value": "all",
											"description": "paid - show only paid signal providers. free - show only free signal providers"
										},
										{
											"key": "order",
											"value": "newest"
										},
										{
											"key": "locale",
											"value": "en"
										}
									]
								},
								"description": "All marketplace items (Permission: NONE, Security: NONE)"
							},
							"response": [
								{
									"name": "All marketplace items (Permission: NONE, Security: NONE)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/marketplace/items?limit=50&offset=<integer>&scope=all&order=newest&locale=en",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"marketplace",
												"items"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "<integer>"
												},
												{
													"key": "scope",
													"value": "all"
												},
												{
													"key": "order",
													"value": "newest"
												},
												{
													"key": "locale",
													"value": "en"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Marketplace Item Id Signals",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/marketplace/:item_id/signals?limit=50&offset=<integer>&order=date&order_direction=desc&locale=en",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"marketplace",
										":item_id",
										"signals"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Limit records. Max: 1_000"
										},
										{
											"key": "offset",
											"value": "<integer>",
											"description": "Offset records"
										},
										{
											"key": "order",
											"value": "date"
										},
										{
											"key": "order_direction",
											"value": "desc"
										},
										{
											"key": "locale",
											"value": "en"
										}
									],
									"variable": [
										{
											"key": "item_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Marketplace Item Signals (Permission: NONE, Security: NONE)"
							},
							"response": [
								{
									"name": "Marketplace Item Signals (Permission: NONE, Security: NONE)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/marketplace/:item_id/signals?limit=50&offset=<integer>&order=date&order_direction=desc&locale=en",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"marketplace",
												":item_id",
												"signals"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "<integer>"
												},
												{
													"key": "order",
													"value": "date"
												},
												{
													"key": "order_direction",
													"value": "desc"
												},
												{
													"key": "locale",
													"value": "en"
												}
											],
											"variable": [
												{
													"key": "item_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "grid bots",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "get Ver1Grid Bots Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Show Grid Bot (Permission: BOTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Show Grid Bot (Permission: BOTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/grid_bots/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"grid_bots",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "delete Ver1Grid Bots Id",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Delete Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/grid_bots/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"grid_bots",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Grid Bots Id Market Orders",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/:id/market_orders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												":id",
												"market_orders"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Grid Bot Market Orders (Permission: BOTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Grid Bot Market Orders (Permission: BOTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/grid_bots/:id/market_orders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"grid_bots",
														":id",
														"market_orders"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Grid Bots Id Profits",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/:id/profits",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												":id",
												"profits"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Grid Bot Profits (Permission: BOTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Grid Bot Profits (Permission: BOTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/grid_bots/:id/profits",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"grid_bots",
														":id",
														"profits"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"period\": \"<string>\",\n \"amount\": \"<double>\",\n \"chart_data\": [\n  \"<double>\",\n  \"<double>\"\n ]\n}"
										}
									]
								},
								{
									"name": "patch Ver1Grid Bots Id Ai",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "pair",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "total_quantity",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "name",
													"value": "GridBot",
													"description": "Grid Bot's name"
												},
												{
													"key": "leverage_type",
													"value": "not_specified",
													"description": "Leverage type for futures accounts"
												},
												{
													"key": "leverage_custom_value",
													"value": "<double>",
													"description": "Required if leverage_type = 'isolated'"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/:id/ai",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												":id",
												"ai"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Edit Grid Bot (AI) (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Edit Grid Bot (AI) (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "pair",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "total_quantity",
															"value": "<double>",
															"description": "(Required) "
														},
														{
															"key": "name",
															"value": "GridBot",
															"description": "Grid Bot's name"
														},
														{
															"key": "leverage_type",
															"value": "not_specified",
															"description": "Leverage type for futures accounts"
														},
														{
															"key": "leverage_custom_value",
															"value": "<double>",
															"description": "Required if leverage_type = 'isolated'"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/grid_bots/:id/ai",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"grid_bots",
														":id",
														"ai"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "patch Ver1Grid Bots Id Manual",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "pair",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "upper_price",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "lower_price",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "quantity_per_grid",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "grids_quantity",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "name",
													"value": "GridBot",
													"description": "Grid Bot's name"
												},
												{
													"key": "leverage_type",
													"value": "not_specified",
													"description": "Leverage type for futures accounts"
												},
												{
													"key": "leverage_custom_value",
													"value": "<double>",
													"description": "Required if leverage_type = 'isolated'"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/:id/manual",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												":id",
												"manual"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Edit Grid Bot (Manual) (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Edit Grid Bot (Manual) (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "pair",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "upper_price",
															"value": "<double>",
															"description": "(Required) "
														},
														{
															"key": "lower_price",
															"value": "<double>",
															"description": "(Required) "
														},
														{
															"key": "quantity_per_grid",
															"value": "<double>",
															"description": "(Required) "
														},
														{
															"key": "grids_quantity",
															"value": "<double>",
															"description": "(Required) "
														},
														{
															"key": "name",
															"value": "GridBot",
															"description": "Grid Bot's name"
														},
														{
															"key": "leverage_type",
															"value": "not_specified",
															"description": "Leverage type for futures accounts"
														},
														{
															"key": "leverage_custom_value",
															"value": "<double>",
															"description": "Required if leverage_type = 'isolated'"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ver1/grid_bots/:id/manual",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"grid_bots",
														":id",
														"manual"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Grid Bots Id Disable",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Disable Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Disable Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/grid_bots/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"grid_bots",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Ver1Grid Bots Id Enable",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Enable Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Enable Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/grid_bots/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"grid_bots",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Ver1Grid Bots Id Required Balances",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/:id/required_balances",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												":id",
												"required_balances"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Get required balances to start bot(Permission: BOTS_READ, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Get required balances to start bot(Permission: BOTS_READ, Security: SIGNED)",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/ver1/grid_bots/:id/required_balances",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ver1",
														"grid_bots",
														":id",
														"required_balances"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "get Ver1Grid Bots",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ver1/grid_bots?state=<string>&sort_by=<string>&sort_direction=<string>&limit=10&offset=0&from=<string>&base=<string>&quote=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"grid_bots"
									],
									"query": [
										{
											"key": "state",
											"value": "<string>",
											"description": "Filter by bot state"
										},
										{
											"key": "sort_by",
											"value": "<string>",
											"description": "Sort column"
										},
										{
											"key": "sort_direction",
											"value": "<string>",
											"description": "Sort direction"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "from",
											"value": "<string>",
											"description": "Param for a filter by created date"
										},
										{
											"key": "base",
											"value": "<string>",
											"description": "Base currency"
										},
										{
											"key": "quote",
											"value": "<string>",
											"description": "Quote currency"
										}
									]
								},
								"description": "Grid bots list (Permission: BOTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Grid bots list (Permission: BOTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots?state=<string>&sort_by=<string>&sort_direction=<string>&limit=10&offset=0&from=<string>&base=<string>&quote=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots"
											],
											"query": [
												{
													"key": "state",
													"value": "<string>"
												},
												{
													"key": "sort_by",
													"value": "<string>"
												},
												{
													"key": "sort_direction",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "from",
													"value": "<string>"
												},
												{
													"key": "base",
													"value": "<string>"
												},
												{
													"key": "quote",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post Ver1Grid Bots Ai",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "(Required) id from GET /ver1/accounts"
										},
										{
											"key": "pair",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "total_quantity",
											"value": "<double>",
											"description": "(Required) "
										},
										{
											"key": "name",
											"value": "GridBot",
											"description": "Grid Bot's name"
										},
										{
											"key": "leverage_type",
											"value": "not_specified",
											"description": "Leverage type for futures accounts"
										},
										{
											"key": "leverage_custom_value",
											"value": "<double>",
											"description": "Required if leverage_type = 'isolated'"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/grid_bots/ai",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"grid_bots",
										"ai"
									]
								},
								"description": "Create AI Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Create AI Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) id from GET /ver1/accounts"
												},
												{
													"key": "pair",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "total_quantity",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "name",
													"value": "GridBot",
													"description": "Grid Bot's name"
												},
												{
													"key": "leverage_type",
													"value": "not_specified",
													"description": "Leverage type for futures accounts"
												},
												{
													"key": "leverage_custom_value",
													"value": "<double>",
													"description": "Required if leverage_type = 'isolated'"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/ai",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												"ai"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post Ver1Grid Bots Manual",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "(Required) id from GET /ver1/accounts"
										},
										{
											"key": "pair",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "upper_price",
											"value": "<double>",
											"description": "(Required) "
										},
										{
											"key": "lower_price",
											"value": "<double>",
											"description": "(Required) "
										},
										{
											"key": "quantity_per_grid",
											"value": "<double>",
											"description": "(Required) "
										},
										{
											"key": "grids_quantity",
											"value": "<double>",
											"description": "(Required) "
										},
										{
											"key": "name",
											"value": "GridBot",
											"description": "Grid Bot's name"
										},
										{
											"key": "leverage_type",
											"value": "not_specified",
											"description": "Leverage type for futures accounts"
										},
										{
											"key": "leverage_custom_value",
											"value": "<double>",
											"description": "Required if leverage_type = 'isolated'"
										},
										{
											"key": "is_enabled",
											"value": "true",
											"description": "Turn on or off grid_bot after creation"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/grid_bots/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"grid_bots",
										"manual"
									]
								},
								"description": "Create Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Create Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) id from GET /ver1/accounts"
												},
												{
													"key": "pair",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "upper_price",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "lower_price",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "quantity_per_grid",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "grids_quantity",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "name",
													"value": "GridBot",
													"description": "Grid Bot's name"
												},
												{
													"key": "leverage_type",
													"value": "not_specified",
													"description": "Leverage type for futures accounts"
												},
												{
													"key": "leverage_custom_value",
													"value": "<double>",
													"description": "Required if leverage_type = 'isolated'"
												},
												{
													"key": "is_enabled",
													"value": "true",
													"description": "Turn on or off grid_bot after creation"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/manual",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												"manual"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Grid Bots Ai Settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/grid_bots/ai_settings?pair=<string>&market_code=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"grid_bots",
										"ai_settings"
									],
									"query": [
										{
											"key": "pair",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "market_code",
											"value": "<string>",
											"description": "(Required) Market code from /accounts/market_list"
										}
									]
								},
								"description": "Get AI settings (Permission: BOTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Get AI settings (Permission: BOTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/grid_bots/ai_settings?pair=<string>&market_code=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"grid_bots",
												"ai_settings"
											],
											"query": [
												{
													"key": "pair",
													"value": "<string>"
												},
												{
													"key": "market_code",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "loose accounts",
					"item": [
						{
							"name": "post Ver1Loose Accounts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "tokens[code]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "tokens[code]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "tokens[amount]",
											"value": "<double>",
											"description": "(Required) "
										},
										{
											"key": "tokens[amount]",
											"value": "<double>",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/loose_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"loose_accounts"
									]
								},
								"description": "Create Loose Account (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Create Loose Account (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "tokens[code]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "tokens[code]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "tokens[amount]",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "tokens[amount]",
													"value": "<double>",
													"description": "(Required) "
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/loose_accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"loose_accounts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get Ver1Loose Accounts Available Currencies",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/loose_accounts/available_currencies?contains=<string>&limit=<integer>&offset=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"loose_accounts",
										"available_currencies"
									],
									"query": [
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										}
									]
								},
								"description": "Available currencies (Permission: ACCOUNTS_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Available currencies (Permission: ACCOUNTS_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ver1/loose_accounts/available_currencies?contains=<string>&limit=<integer>&offset=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"loose_accounts",
												"available_currencies"
											],
											"query": [
												{
													"key": "contains",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												},
												{
													"key": "offset",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "put Ver1Loose Accounts Account Id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "tokens[code]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "tokens[code]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "tokens[amount]",
											"value": "<double>",
											"description": "(Required) "
										},
										{
											"key": "tokens[amount]",
											"value": "<double>",
											"description": "(Required) "
										},
										{
											"key": "name",
											"value": "<string>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/ver1/loose_accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"loose_accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Update Loose Account (Permission: ACCOUNTS_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Update Loose Account (Permission: ACCOUNTS_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "tokens[code]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "tokens[code]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "tokens[amount]",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "tokens[amount]",
													"value": "<double>",
													"description": "(Required) "
												},
												{
													"key": "name",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ver1/loose_accounts/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ver1",
												"loose_accounts",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "get Ver1Ping",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ver1/ping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ver1",
								"ping"
							]
						},
						"description": "Test connectivity to the Rest API (Permission: NONE, Security: NONE)"
					},
					"response": [
						{
							"name": "Test connectivity to the Rest API (Permission: NONE, Security: NONE)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"ping"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"pong\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get Ver1Time",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ver1/time",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ver1",
								"time"
							]
						},
						"description": "Test connectivity to the Rest API and get the current server time (Permission: NONE, Security: NONE)"
					},
					"response": [
						{
							"name": "Test connectivity to the Rest API and get the current server time (Permission: NONE, Security: NONE)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ver1/time",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ver1",
										"time"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"server_time\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "v2/smart trades",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "get V2Smart Trades Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Get smart trade v2 by id (Permission: SMART_TRADE_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Get smart trade v2 by id (Permission: SMART_TRADE_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "delete V2Smart Trades Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Cancel smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Cancel smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "patch V2Smart Trades Id",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "leverage[enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "position[units][value]",
											"value": "<double>",
											"description": "(Required) Amount of units to buy"
										},
										{
											"key": "position[price][value]",
											"value": "<double>",
											"description": "(Required) Price for limit order"
										},
										{
											"key": "position[conditional][price][value]",
											"value": "<double>",
											"description": "(Required) Conditional trigger price"
										},
										{
											"key": "position[conditional][order_type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "position[conditional][trailing][enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "position[conditional][trailing][percent]",
											"value": "<float>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][order_type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][order_type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][volume]",
											"value": "<float>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][volume]",
											"value": "<float>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][price][type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][price][type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][trailing][enabled]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][trailing][enabled]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][trailing][percent]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][trailing][percent]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[order_type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[price][value]",
											"value": "<double>",
											"description": "(Required) Price for limit order"
										},
										{
											"key": "stop_loss[conditional][price][type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[conditional][trailing][enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[timeout][enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[timeout][value]",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "leverage[type]",
											"value": "<string>"
										},
										{
											"key": "leverage[value]",
											"value": "<integer>",
											"description": "Cross leverage value"
										},
										{
											"key": "position[conditional][price][type]",
											"value": "<string>",
											"description": "By default ask for long, bid for short"
										},
										{
											"key": "take_profit[steps][][price][value]",
											"value": "<string>"
										},
										{
											"key": "take_profit[steps][][price][value]",
											"value": "<string>"
										},
										{
											"key": "take_profit[steps][][price][percent]",
											"value": "<string>"
										},
										{
											"key": "take_profit[steps][][price][percent]",
											"value": "<string>"
										},
										{
											"key": "stop_loss[breakeven]",
											"value": "<boolean>"
										},
										{
											"key": "stop_loss[conditional][price][value]",
											"value": "<double>",
											"description": "Trigger price"
										},
										{
											"key": "stop_loss[conditional][price][percent]",
											"value": "<float>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Update smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Update smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "leverage[enabled]",
													"value": "<boolean>",
													"description": "(Required) "
												},
												{
													"key": "position[units][value]",
													"value": "<double>",
													"description": "(Required) Amount of units to buy"
												},
												{
													"key": "position[price][value]",
													"value": "<double>",
													"description": "(Required) Price for limit order"
												},
												{
													"key": "position[conditional][price][value]",
													"value": "<double>",
													"description": "(Required) Conditional trigger price"
												},
												{
													"key": "position[conditional][order_type]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "position[conditional][trailing][enabled]",
													"value": "<boolean>",
													"description": "(Required) "
												},
												{
													"key": "position[conditional][trailing][percent]",
													"value": "<float>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[enabled]",
													"value": "<boolean>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][order_type]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][order_type]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][volume]",
													"value": "<float>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][volume]",
													"value": "<float>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][price][type]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][price][type]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][trailing][enabled]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][trailing][enabled]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][trailing][percent]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "take_profit[steps][][trailing][percent]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "stop_loss[enabled]",
													"value": "<boolean>",
													"description": "(Required) "
												},
												{
													"key": "stop_loss[order_type]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "stop_loss[price][value]",
													"value": "<double>",
													"description": "(Required) Price for limit order"
												},
												{
													"key": "stop_loss[conditional][price][type]",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "stop_loss[conditional][trailing][enabled]",
													"value": "<boolean>",
													"description": "(Required) "
												},
												{
													"key": "stop_loss[timeout][enabled]",
													"value": "<boolean>",
													"description": "(Required) "
												},
												{
													"key": "stop_loss[timeout][value]",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "leverage[type]",
													"value": "<string>"
												},
												{
													"key": "leverage[value]",
													"value": "<integer>",
													"description": "Cross leverage value"
												},
												{
													"key": "position[conditional][price][type]",
													"value": "<string>",
													"description": "By default ask for long, bid for short"
												},
												{
													"key": "take_profit[steps][][price][value]",
													"value": "<string>"
												},
												{
													"key": "take_profit[steps][][price][value]",
													"value": "<string>"
												},
												{
													"key": "take_profit[steps][][price][percent]",
													"value": "<string>"
												},
												{
													"key": "take_profit[steps][][price][percent]",
													"value": "<string>"
												},
												{
													"key": "stop_loss[breakeven]",
													"value": "<boolean>"
												},
												{
													"key": "stop_loss[conditional][price][value]",
													"value": "<double>",
													"description": "Trigger price"
												},
												{
													"key": "stop_loss[conditional][price][percent]",
													"value": "<float>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post V2Smart Trades Id Reduce Funds",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "order_type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "units[value]",
											"value": "<double>",
											"description": "(Required) Amount of units to buy"
										},
										{
											"key": "price[value]",
											"value": "<double>",
											"description": "(Required) Price for limit order"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:id/reduce_funds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":id",
										"reduce_funds"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Reduce funds for smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Reduce funds for smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:id/reduce_funds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":id",
												"reduce_funds"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post V2Smart Trades Id Add Funds",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "order_type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "units[value]",
											"value": "<double>",
											"description": "(Required) Amount of units to buy"
										},
										{
											"key": "price[value]",
											"value": "<double>",
											"description": "(Required) Price for limit order"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:id/add_funds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":id",
										"add_funds"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Average for smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Average for smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:id/add_funds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":id",
												"add_funds"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post V2Smart Trades Id Close By Market",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:id/close_by_market",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":id",
										"close_by_market"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Close by market smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Close by market smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:id/close_by_market",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":id",
												"close_by_market"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post V2Smart Trades Id Force Start",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:id/force_start",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":id",
										"force_start"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Force start smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Force start smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:id/force_start",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":id",
												"force_start"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post V2Smart Trades Id Force Process",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:id/force_process",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":id",
										"force_process"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Process smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Process smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:id/force_process",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":id",
												"force_process"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post V2Smart Trades Id Set Note",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "note",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:id/set_note",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":id",
										"set_note"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Set note to smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Set note to smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "note",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:id/set_note",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":id",
												"set_note"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{smart trade id}/trades",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "delete V2Smart Trades Smart Trade Id Trades Id",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:smart_trade_id/trades/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":smart_trade_id",
												"trades",
												":id"
											],
											"variable": [
												{
													"key": "smart_trade_id",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Cancel trade (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Cancel trade (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v2/smart_trades/:smart_trade_id/trades/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"smart_trades",
														":smart_trade_id",
														"trades",
														":id"
													],
													"variable": [
														{
															"key": "smart_trade_id",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post V2Smart Trades Smart Trade Id Trades Id Close By Market",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:smart_trade_id/trades/:id/close_by_market",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":smart_trade_id",
												"trades",
												":id",
												"close_by_market"
											],
											"variable": [
												{
													"key": "smart_trade_id",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Panic close trade by market (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
									},
									"response": [
										{
											"name": "Panic close trade by market (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v2/smart_trades/:smart_trade_id/trades/:id/close_by_market",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"smart_trades",
														":smart_trade_id",
														"trades",
														":id",
														"close_by_market"
													],
													"variable": [
														{
															"key": "smart_trade_id",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "get V2Smart Trades Smart Trade Id Trades",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades/:smart_trade_id/trades",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades",
										":smart_trade_id",
										"trades"
									],
									"variable": [
										{
											"key": "smart_trade_id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "Get smart trade v2 trades (Permission: SMART_TRADE_READ, Security: SIGNED)"
							},
							"response": [
								{
									"name": "Get smart trade v2 trades (Permission: SMART_TRADE_READ, Security: SIGNED)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/smart_trades/:smart_trade_id/trades",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"smart_trades",
												":smart_trade_id",
												"trades"
											],
											"variable": [
												{
													"key": "smart_trade_id",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "get V2Smart Trades",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/smart_trades?account_id=<integer>&pair=<string>&type=<string>&page=1&per_page=10&status=<string>&order_by=status&order_direction=desc&from=<string>&base=<string>&quote=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"smart_trades"
							],
							"query": [
								{
									"key": "account_id",
									"value": "<integer>"
								},
								{
									"key": "pair",
									"value": "<string>"
								},
								{
									"key": "type",
									"value": "<string>"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "10"
								},
								{
									"key": "status",
									"value": "<string>"
								},
								{
									"key": "order_by",
									"value": "status"
								},
								{
									"key": "order_direction",
									"value": "desc"
								},
								{
									"key": "from",
									"value": "<string>",
									"description": "Param for a filter by created date"
								},
								{
									"key": "base",
									"value": "<string>",
									"description": "Base currency"
								},
								{
									"key": "quote",
									"value": "<string>",
									"description": "Quote currency"
								}
							]
						},
						"description": "Get smart trade history (Permission: SMART_TRADE_READ, Security: SIGNED)"
					},
					"response": [
						{
							"name": "Get smart trade history (Permission: SMART_TRADE_READ, Security: SIGNED)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades?account_id=<integer>&pair=<string>&type=<string>&page=1&per_page=10&status=<string>&order_by=status&order_direction=desc&from=<string>&base=<string>&quote=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades"
									],
									"query": [
										{
											"key": "account_id",
											"value": "<integer>"
										},
										{
											"key": "pair",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "10"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "order_by",
											"value": "status"
										},
										{
											"key": "order_direction",
											"value": "desc"
										},
										{
											"key": "from",
											"value": "<string>"
										},
										{
											"key": "base",
											"value": "<string>"
										},
										{
											"key": "quote",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "post V2Smart Trades",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "account_id",
									"value": "<integer>",
									"description": "(Required) id from GET /ver1/accounts"
								},
								{
									"key": "pair",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "leverage[enabled]",
									"value": "<boolean>",
									"description": "(Required) "
								},
								{
									"key": "position[type]",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "position[order_type]",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "position[units][value]",
									"value": "<double>",
									"description": "(Required) Amount of units to buy"
								},
								{
									"key": "position[price][value]",
									"value": "<double>",
									"description": "(Required) Price for limit order"
								},
								{
									"key": "position[conditional][price][value]",
									"value": "<double>",
									"description": "(Required) Conditional trigger price"
								},
								{
									"key": "position[conditional][order_type]",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "position[conditional][trailing][enabled]",
									"value": "<boolean>",
									"description": "(Required) "
								},
								{
									"key": "position[conditional][trailing][percent]",
									"value": "<float>",
									"description": "(Required) Should be 100% in the sum of all steps"
								},
								{
									"key": "take_profit[enabled]",
									"value": "<boolean>",
									"description": "(Required) "
								},
								{
									"key": "take_profit[steps][][order_type]",
									"value": "<string>",
									"description": "(Required) market, limit"
								},
								{
									"key": "take_profit[steps][][order_type]",
									"value": "<string>",
									"description": "(Required) market, limit"
								},
								{
									"key": "take_profit[steps][][volume]",
									"value": "<float>",
									"description": "(Required) "
								},
								{
									"key": "take_profit[steps][][volume]",
									"value": "<float>",
									"description": "(Required) "
								},
								{
									"key": "take_profit[steps][][price][type]",
									"value": "<string>",
									"description": "(Required) bid, ask, last"
								},
								{
									"key": "take_profit[steps][][price][type]",
									"value": "<string>",
									"description": "(Required) bid, ask, last"
								},
								{
									"key": "take_profit[steps][][trailing][enabled]",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "take_profit[steps][][trailing][enabled]",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "take_profit[steps][][trailing][percent]",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "take_profit[steps][][trailing][percent]",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stop_loss[enabled]",
									"value": "<boolean>",
									"description": "(Required) "
								},
								{
									"key": "stop_loss[order_type]",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stop_loss[price][value]",
									"value": "<double>",
									"description": "(Required) Price for limit order"
								},
								{
									"key": "stop_loss[conditional][price][type]",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stop_loss[conditional][trailing][enabled]",
									"value": "<boolean>",
									"description": "(Required) "
								},
								{
									"key": "stop_loss[timeout][enabled]",
									"value": "<boolean>",
									"description": "(Required) "
								},
								{
									"key": "stop_loss[timeout][value]",
									"value": "<integer>",
									"description": "(Required) "
								},
								{
									"key": "instant",
									"value": "<boolean>",
									"description": "true for Simple Buy and Simple Sell"
								},
								{
									"key": "skip_enter_step",
									"value": "<boolean>",
									"description": "true only for Smart Sell"
								},
								{
									"key": "note",
									"value": "<string>"
								},
								{
									"key": "leverage[type]",
									"value": "<string>"
								},
								{
									"key": "leverage[value]",
									"value": "<integer>",
									"description": "Cross leverage value"
								},
								{
									"key": "position[conditional][price][type]",
									"value": "<string>",
									"description": "By default ask for long, bid for short"
								},
								{
									"key": "take_profit[steps][][price][value]",
									"value": "<string>",
									"description": "only if position has no trailing or position trailing is finished"
								},
								{
									"key": "take_profit[steps][][price][value]",
									"value": "<string>",
									"description": "only if position has no trailing or position trailing is finished"
								},
								{
									"key": "take_profit[steps][][price][percent]",
									"value": "<string>",
									"description": "only if position has trailing and position trailing is not finished"
								},
								{
									"key": "take_profit[steps][][price][percent]",
									"value": "<string>",
									"description": "only if position has trailing and position trailing is not finished"
								},
								{
									"key": "stop_loss[breakeven]",
									"value": "<boolean>"
								},
								{
									"key": "stop_loss[conditional][price][value]",
									"value": "<double>",
									"description": "if position has no trailing or position trailing is finished"
								},
								{
									"key": "stop_loss[conditional][price][percent]",
									"value": "<float>",
									"description": "only if position has trailing and position trailing is not finished"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/v2/smart_trades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"smart_trades"
							]
						},
						"description": "Create smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)"
					},
					"response": [
						{
							"name": "Create smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_id",
											"value": "<integer>",
											"description": "(Required) id from GET /ver1/accounts"
										},
										{
											"key": "pair",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "leverage[enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "position[type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "position[order_type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "position[units][value]",
											"value": "<double>",
											"description": "(Required) Amount of units to buy"
										},
										{
											"key": "position[price][value]",
											"value": "<double>",
											"description": "(Required) Price for limit order"
										},
										{
											"key": "position[conditional][price][value]",
											"value": "<double>",
											"description": "(Required) Conditional trigger price"
										},
										{
											"key": "position[conditional][order_type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "position[conditional][trailing][enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "position[conditional][trailing][percent]",
											"value": "<float>",
											"description": "(Required) Should be 100% in the sum of all steps"
										},
										{
											"key": "take_profit[enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][order_type]",
											"value": "<string>",
											"description": "(Required) market, limit"
										},
										{
											"key": "take_profit[steps][][order_type]",
											"value": "<string>",
											"description": "(Required) market, limit"
										},
										{
											"key": "take_profit[steps][][volume]",
											"value": "<float>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][volume]",
											"value": "<float>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][price][type]",
											"value": "<string>",
											"description": "(Required) bid, ask, last"
										},
										{
											"key": "take_profit[steps][][price][type]",
											"value": "<string>",
											"description": "(Required) bid, ask, last"
										},
										{
											"key": "take_profit[steps][][trailing][enabled]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][trailing][enabled]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][trailing][percent]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "take_profit[steps][][trailing][percent]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[order_type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[price][value]",
											"value": "<double>",
											"description": "(Required) Price for limit order"
										},
										{
											"key": "stop_loss[conditional][price][type]",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[conditional][trailing][enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[timeout][enabled]",
											"value": "<boolean>",
											"description": "(Required) "
										},
										{
											"key": "stop_loss[timeout][value]",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "instant",
											"value": "<boolean>",
											"description": "true for Simple Buy and Simple Sell"
										},
										{
											"key": "skip_enter_step",
											"value": "<boolean>",
											"description": "true only for Smart Sell"
										},
										{
											"key": "note",
											"value": "<string>"
										},
										{
											"key": "leverage[type]",
											"value": "<string>"
										},
										{
											"key": "leverage[value]",
											"value": "<integer>",
											"description": "Cross leverage value"
										},
										{
											"key": "position[conditional][price][type]",
											"value": "<string>",
											"description": "By default ask for long, bid for short"
										},
										{
											"key": "take_profit[steps][][price][value]",
											"value": "<string>",
											"description": "only if position has no trailing or position trailing is finished"
										},
										{
											"key": "take_profit[steps][][price][value]",
											"value": "<string>",
											"description": "only if position has no trailing or position trailing is finished"
										},
										{
											"key": "take_profit[steps][][price][percent]",
											"value": "<string>",
											"description": "only if position has trailing and position trailing is not finished"
										},
										{
											"key": "take_profit[steps][][price][percent]",
											"value": "<string>",
											"description": "only if position has trailing and position trailing is not finished"
										},
										{
											"key": "stop_loss[breakeven]",
											"value": "<boolean>"
										},
										{
											"key": "stop_loss[conditional][price][value]",
											"value": "<double>",
											"description": "if position has no trailing or position trailing is finished"
										},
										{
											"key": "stop_loss[conditional][price][percent]",
											"value": "<float>",
											"description": "only if position has trailing and position trailing is not finished"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v2/smart_trades",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"smart_trades"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"hma_text = request.url;",
					"if (pm.request.body !== undefined){",
					"    hma_text += pm.request.body;",
					"}",
					"",
					"// variable injection is done after pre-request scripts. We need to do it with the folowing line",
					"hma_text = pm.variables.replaceIn(hma_text);",
					"",
					"// important for signature calculation. Do NOT omit this part",
					"hma_text = hma_text.replace(\"https://api.3commas.io\", \"\");",
					"",
					"key = pm.variables.get('THREE_COMMAS_API_KEY');",
					"secret = pm.variables.get('THREE_COMMAS_API_SECRET');",
					"",
					"if (!key) throw new Error(`Must set collection var: THREE_COMMAS_API_KEY, current value: ${key}`);",
					"if (!secret) throw new Error(`Must set collection var: THREE_COMMAS_API_SECRET, current value: ${secret}`);",
					"",
					"signature = CryptoJS.HmacSHA256(hma_text, secret).toString();",
					"pm.request.headers.add({key: \"Signature\", value: signature});",
					"pm.request.headers.add({key: \"APIKEY\", value: key});",
					"",
					"// Forced mode ",
					"forced_mode = pm.variables.get('FORCED_MODE');",
					"if (forced_mode === \"paper\" || request.url.includes(\"forced_mode=paper\")){",
					"    console.log(\"Forced-Mode set to paper\");",
					"    pm.request.headers.add({key: \"Forced-Mode\", value: \"paper\"});",
					"} else if (forced_mode === \"real\" || request.url.includes(\"forced_mode=real\")){",
					"    console.log(\"Forced-Mode set to real\");",
					"    pm.request.headers.add({key: \"Forced-Mode\", value: \"real\"});",
					"} ",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.3commas.io/public/api"
		},
		{
			"key": "THREE_COMMAS_API_KEY",
			"value": ""
		},
		{
			"key": "THREE_COMMAS_API_SECRET",
			"value": ""
		},
		{
			"key": "FORCED_MODE",
			"value": "paper",
			"disabled": true
		}
	]
}